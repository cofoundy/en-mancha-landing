---
interface Props {
  id?: string;
  name?: string;
  value?: string;
  label?: string;
  description?: string;
  checked?: boolean;
  required?: boolean;
  disabled?: boolean;
  hasIcon?: boolean;
  variant?: 'default' | 'card' | 'button';
  class?: string;
}

const {
  id,
  name,
  value,
  label,
  description,
  checked = false,
  required = false,
  disabled = false,
  hasIcon = false,
  variant = 'default',
  class: className = '',
} = Astro.props;

// Determine styles based on variant
let containerClass = '';
let labelClass = '';

switch (variant) {
  case 'card':
    containerClass = "flex items-start border border-neutral-lighter rounded-lg p-4 cursor-pointer hover:bg-neutral-lightest";
    labelClass = "ml-3";
    break;
  case 'button':
    containerClass = "relative inline-flex";
    labelClass = "";
    break;
  default:
    containerClass = "flex items-center";
    labelClass = "ml-2 select-none";
}

// Button variant specific styles
const buttonClass = variant === 'button' 
  ? `px-3 py-2 inline-flex items-center border border-neutral-lighter rounded-md ${checked ? 'bg-guardsman-lighter border-guardsman' : 'bg-white'} cursor-pointer`
  : '';
---

{variant === 'card' ? (
  <label class={`${containerClass} ${className}`} for={id}>
    {hasIcon && (
      <div class="flex-shrink-0 mr-2">
        <slot name="icon" />
      </div>
    )}
    <div class="flex items-center h-5">
      <input
        type="radio"
        id={id}
        name={name}
        value={value}
        checked={checked}
        required={required}
        disabled={disabled}
        class="h-4 w-4 text-guardsman focus:ring-guardsman-light border-neutral-lighter rounded-full cursor-pointer"
      />
    </div>
    <div class={labelClass}>
      {label && <div class="text-sm font-medium text-neutral-darkest">{label}</div>}
      {description && <div class="text-xs text-neutral-dark">{description}</div>}
    </div>
  </label>
) : variant === 'button' ? (
  <label class={`${buttonClass} ${className}`} for={id}>
    <input
      type="radio"
      id={id}
      name={name}
      value={value}
      checked={checked}
      required={required}
      disabled={disabled}
      class="sr-only"
    />
    {hasIcon && (
      <span class="mr-2">
        <slot name="icon" />
      </span>
    )}
    <span class="text-sm font-medium">{label}</span>
    {checked && (
      <span class="absolute top-1 right-1 flex h-3 w-3">
        <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-guardsman opacity-75"></span>
        <span class="relative inline-flex rounded-full h-3 w-3 bg-guardsman"></span>
      </span>
    )}
  </label>
) : (
  <div class={`${containerClass} ${className}`}>
    <input
      type="radio"
      id={id}
      name={name}
      value={value}
      checked={checked}
      required={required}
      disabled={disabled}
      class="h-4 w-4 text-guardsman focus:ring-guardsman-light border-neutral-lighter rounded-full cursor-pointer"
    />
    {(label || hasIcon) && (
      <label for={id} class={labelClass}>
        <div class="flex items-center">
          {hasIcon && (
            <span class="mr-2">
              <slot name="icon" />
            </span>
          )}
          <span class="text-sm font-medium text-neutral-darkest">{label}</span>
        </div>
        {description && <div class="text-xs text-neutral-dark">{description}</div>}
      </label>
    )}
  </div>
)} 